/*
 * This file was generated by `npm run generate_ctx_I_file` in @ctx-core/dev-tools
*/
import { be_ } from '@ctx-core/object'
import type { env_Ctx } from './env_Ctx'
import type { CACHE_VERSION$_T } from './CACHE_VERSION$_b'
import { CACHE_VERSION$_b } from './CACHE_VERSION$_b'
import type { NODE_ENV$_T } from './NODE_ENV$_b'
import { NODE_ENV$_b } from './NODE_ENV$_b'
import type { VERSION$_T } from './VERSION$_b'
import { VERSION$_b } from './VERSION$_b'
import type { is_development$_T } from './is_development$_b'
import { is_development$_b } from './is_development$_b'
import type { is_production$_T } from './is_production$_b'
import { is_production$_b } from './is_production$_b'
import type { is_staging$_T } from './is_staging$_b'
import { is_staging$_b } from './is_staging$_b'
export interface env_ctx_I {
	CACHE_VERSION$?:CACHE_VERSION$_T
	NODE_ENV$?:NODE_ENV$_T
	VERSION$?:VERSION$_T
	is_development$?:is_development$_T
	is_production$?:is_production$_T
	is_staging$?:is_staging$_T
	env_b_h?:env_b_h_T
}
export interface env_b_h_T {
	get CACHE_VERSION$():CACHE_VERSION$_T
	get NODE_ENV$():NODE_ENV$_T
	get VERSION$():VERSION$_T
	get is_development$():is_development$_T
	get is_production$():is_production$_T
	get is_staging$():is_staging$_T
}
export function env_b_h_b(ctx:env_Ctx):env_b_h_T {
	return be_<env_Ctx, 'env_b_h'>('env_b_h', ()=>{
		return {
			get CACHE_VERSION$() { return CACHE_VERSION$_b(ctx) },
			get NODE_ENV$() { return NODE_ENV$_b(ctx) },
			get VERSION$() { return VERSION$_b(ctx) },
			get is_development$() { return is_development$_b(ctx) },
			get is_production$() { return is_production$_b(ctx) },
			get is_staging$() { return is_staging$_b(ctx) }
		}
	})(ctx)
}
